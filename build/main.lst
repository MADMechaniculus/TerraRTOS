ARM GAS  /tmp/ccG5Zjkn.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.align	2
  19              	.LC2:
  20 000c 6C776970 		.ascii	"lwipTask\000"
  20      5461736B 
  20      00
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.MX_GPIO_Init,"ax",%progbits
  25              		.align	1
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	MX_GPIO_Init:
  31              	.LFB104:
  32              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
ARM GAS  /tmp/ccG5Zjkn.s 			page 2


  23:Core/Src/main.c **** #include "lwip.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** osThreadId defaultTaskHandle;
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** osThreadId lwipTaskHandle;
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** void StartLWIPTask(void const * argument);
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccG5Zjkn.s 			page 3


  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  97:Core/Src/main.c ****   /* add mutexes, ... */
  98:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 101:Core/Src/main.c ****   /* add semaphores, ... */
 102:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 105:Core/Src/main.c ****   /* start timers, add new ones, ... */
 106:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 109:Core/Src/main.c ****   /* add queues, ... */
 110:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Create the thread(s) */
 113:Core/Src/main.c ****   /* definition and creation of defaultTask */
 114:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 115:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 118:Core/Src/main.c ****   osThreadDef(lwipTask, StartLWIPTask, osPriorityNormal, 0, 512);
 119:Core/Src/main.c ****   lwipTaskHandle = osThreadCreate(osThread(lwipTask), NULL);
 120:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Start scheduler */
 123:Core/Src/main.c ****   osKernelStart();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c ****   while (1)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 135:Core/Src/main.c **** }
 136:Core/Src/main.c **** 
ARM GAS  /tmp/ccG5Zjkn.s 			page 4


 137:Core/Src/main.c **** /**
 138:Core/Src/main.c ****   * @brief System Clock Configuration
 139:Core/Src/main.c ****   * @retval None
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** void SystemClock_Config(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /**
 177:Core/Src/main.c ****   * @brief GPIO Initialization Function
 178:Core/Src/main.c ****   * @param None
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** static void MX_GPIO_Init(void)
 182:Core/Src/main.c **** {
  33              		.loc 1 182 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 40
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 30B5     		push	{r4, r5, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 12
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 5, -8
  42              		.cfi_offset 14, -4
  43 0002 8BB0     		sub	sp, sp, #44
ARM GAS  /tmp/ccG5Zjkn.s 			page 5


  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 56
 183:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 183 3 view .LVU1
  47              		.loc 1 183 20 is_stmt 0 view .LVU2
  48 0004 0024     		movs	r4, #0
  49 0006 0594     		str	r4, [sp, #20]
  50 0008 0694     		str	r4, [sp, #24]
  51 000a 0794     		str	r4, [sp, #28]
  52 000c 0894     		str	r4, [sp, #32]
  53 000e 0994     		str	r4, [sp, #36]
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 186:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 186 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 186 3 view .LVU4
  57 0010 0194     		str	r4, [sp, #4]
  58              		.loc 1 186 3 view .LVU5
  59 0012 1E4B     		ldr	r3, .L3
  60 0014 1A6B     		ldr	r2, [r3, #48]
  61 0016 42F08002 		orr	r2, r2, #128
  62 001a 1A63     		str	r2, [r3, #48]
  63              		.loc 1 186 3 view .LVU6
  64 001c 1A6B     		ldr	r2, [r3, #48]
  65 001e 02F08002 		and	r2, r2, #128
  66 0022 0192     		str	r2, [sp, #4]
  67              		.loc 1 186 3 view .LVU7
  68 0024 019A     		ldr	r2, [sp, #4]
  69              	.LBE4:
  70              		.loc 1 186 3 view .LVU8
 187:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  71              		.loc 1 187 3 view .LVU9
  72              	.LBB5:
  73              		.loc 1 187 3 view .LVU10
  74 0026 0294     		str	r4, [sp, #8]
  75              		.loc 1 187 3 view .LVU11
  76 0028 1A6B     		ldr	r2, [r3, #48]
  77 002a 42F00402 		orr	r2, r2, #4
  78 002e 1A63     		str	r2, [r3, #48]
  79              		.loc 1 187 3 view .LVU12
  80 0030 1A6B     		ldr	r2, [r3, #48]
  81 0032 02F00402 		and	r2, r2, #4
  82 0036 0292     		str	r2, [sp, #8]
  83              		.loc 1 187 3 view .LVU13
  84 0038 029A     		ldr	r2, [sp, #8]
  85              	.LBE5:
  86              		.loc 1 187 3 view .LVU14
 188:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  87              		.loc 1 188 3 view .LVU15
  88              	.LBB6:
  89              		.loc 1 188 3 view .LVU16
  90 003a 0394     		str	r4, [sp, #12]
  91              		.loc 1 188 3 view .LVU17
  92 003c 1A6B     		ldr	r2, [r3, #48]
  93 003e 42F00102 		orr	r2, r2, #1
  94 0042 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccG5Zjkn.s 			page 6


  95              		.loc 1 188 3 view .LVU18
  96 0044 1A6B     		ldr	r2, [r3, #48]
  97 0046 02F00102 		and	r2, r2, #1
  98 004a 0392     		str	r2, [sp, #12]
  99              		.loc 1 188 3 view .LVU19
 100 004c 039A     		ldr	r2, [sp, #12]
 101              	.LBE6:
 102              		.loc 1 188 3 view .LVU20
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 103              		.loc 1 189 3 view .LVU21
 104              	.LBB7:
 105              		.loc 1 189 3 view .LVU22
 106 004e 0494     		str	r4, [sp, #16]
 107              		.loc 1 189 3 view .LVU23
 108 0050 1A6B     		ldr	r2, [r3, #48]
 109 0052 42F00202 		orr	r2, r2, #2
 110 0056 1A63     		str	r2, [r3, #48]
 111              		.loc 1 189 3 view .LVU24
 112 0058 1B6B     		ldr	r3, [r3, #48]
 113 005a 03F00203 		and	r3, r3, #2
 114 005e 0493     		str	r3, [sp, #16]
 115              		.loc 1 189 3 view .LVU25
 116 0060 049B     		ldr	r3, [sp, #16]
 117              	.LBE7:
 118              		.loc 1 189 3 view .LVU26
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 192:Core/Src/main.c ****   HAL_GPIO_WritePin(VD4_Pin_GPIO_Port, VD4_Pin_Pin, GPIO_PIN_RESET);
 119              		.loc 1 192 3 view .LVU27
 120 0062 0B4D     		ldr	r5, .L3+4
 121 0064 2246     		mov	r2, r4
 122 0066 4FF40071 		mov	r1, #512
 123 006a 2846     		mov	r0, r5
 124 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 125              	.LVL0:
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /*Configure GPIO pin : VD4_Pin_Pin */
 195:Core/Src/main.c ****   GPIO_InitStruct.Pin = VD4_Pin_Pin;
 126              		.loc 1 195 3 view .LVU28
 127              		.loc 1 195 23 is_stmt 0 view .LVU29
 128 0070 4FF40073 		mov	r3, #512
 129 0074 0593     		str	r3, [sp, #20]
 196:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 130              		.loc 1 196 3 is_stmt 1 view .LVU30
 131              		.loc 1 196 24 is_stmt 0 view .LVU31
 132 0076 0123     		movs	r3, #1
 133 0078 0693     		str	r3, [sp, #24]
 197:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 197 3 is_stmt 1 view .LVU32
 135              		.loc 1 197 24 is_stmt 0 view .LVU33
 136 007a 0794     		str	r4, [sp, #28]
 198:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137              		.loc 1 198 3 is_stmt 1 view .LVU34
 138              		.loc 1 198 25 is_stmt 0 view .LVU35
 139 007c 0894     		str	r4, [sp, #32]
 199:Core/Src/main.c ****   HAL_GPIO_Init(VD4_Pin_GPIO_Port, &GPIO_InitStruct);
 140              		.loc 1 199 3 is_stmt 1 view .LVU36
ARM GAS  /tmp/ccG5Zjkn.s 			page 7


 141 007e 05A9     		add	r1, sp, #20
 142 0080 2846     		mov	r0, r5
 143 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL1:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** }
 145              		.loc 1 201 1 is_stmt 0 view .LVU37
 146 0086 0BB0     		add	sp, sp, #44
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 12
 149              		@ sp needed
 150 0088 30BD     		pop	{r4, r5, pc}
 151              	.L4:
 152 008a 00BF     		.align	2
 153              	.L3:
 154 008c 00380240 		.word	1073887232
 155 0090 00040240 		.word	1073873920
 156              		.cfi_endproc
 157              	.LFE104:
 159              		.section	.text.StartLWIPTask,"ax",%progbits
 160              		.align	1
 161              		.global	StartLWIPTask
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	StartLWIPTask:
 167              	.LVL2:
 168              	.LFB105:
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 204:Core/Src/main.c **** /**
 205:Core/Src/main.c ****  * @brief Процесс обработки пакетов LWIP
 206:Core/Src/main.c ****  * 
 207:Core/Src/main.c ****  * @param argument Аргументы запуска
 208:Core/Src/main.c ****  */
 209:Core/Src/main.c **** void StartLWIPTask(void const * argument) {
 169              		.loc 1 209 43 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ Volatile: function does not return.
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		.loc 1 209 43 is_stmt 0 view .LVU39
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 210:Core/Src/main.c ****   MX_LWIP_Init();
 180              		.loc 1 210 3 is_stmt 1 view .LVU40
 181 0002 FFF7FEFF 		bl	MX_LWIP_Init
 182              	.LVL3:
 183              	.L6:
 211:Core/Src/main.c ****   
 212:Core/Src/main.c ****   while (1)
 184              		.loc 1 212 3 discriminator 1 view .LVU41
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     /// Возможно, тут надо добавить функцию MX_LWIP_Process(), кот
ARM GAS  /tmp/ccG5Zjkn.s 			page 8


 215:Core/Src/main.c ****   }
 185              		.loc 1 215 3 discriminator 1 view .LVU42
 212:Core/Src/main.c ****   {
 186              		.loc 1 212 9 discriminator 1 view .LVU43
 187 0006 FEE7     		b	.L6
 188              		.cfi_endproc
 189              	.LFE105:
 191              		.section	.text.StartDefaultTask,"ax",%progbits
 192              		.align	1
 193              		.global	StartDefaultTask
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	StartDefaultTask:
 199              	.LFB106:
 216:Core/Src/main.c **** }
 217:Core/Src/main.c **** /* USER CODE END 4 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 222:Core/Src/main.c ****   * @param  argument: Not used
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 226:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 227:Core/Src/main.c **** {
 200              		.loc 1 227 1 view -0
 201              		.cfi_startproc
 202              		@ Volatile: function does not return.
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL4:
 206              		.loc 1 227 1 is_stmt 0 view .LVU45
 207 0000 08B5     		push	{r3, lr}
 208              	.LCFI4:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
 212 0002 05E0     		b	.L9
 213              	.LVL5:
 214              	.L13:
 228:Core/Src/main.c ****   /* init code for LWIP */
 229:Core/Src/main.c ****   // MX_LWIP_Init();
 230:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 231:Core/Src/main.c ****   /* Infinite loop */
 232:Core/Src/main.c ****   for(;;)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     osDelay(1000);
 235:Core/Src/main.c ****     if (initPHYStatus) {
 236:Core/Src/main.c ****       HAL_GPIO_WritePin(VD4_Pin_GPIO_Port, VD4_Pin_Pin, GPIO_PIN_SET);
 215              		.loc 1 236 7 is_stmt 1 view .LVU46
 216 0004 0122     		movs	r2, #1
 217 0006 4FF40071 		mov	r1, #512
 218 000a 0948     		ldr	r0, .L14
 219 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL6:
ARM GAS  /tmp/ccG5Zjkn.s 			page 9


 221              	.L9:
 232:Core/Src/main.c ****   {
 222              		.loc 1 232 3 view .LVU47
 234:Core/Src/main.c ****     if (initPHYStatus) {
 223              		.loc 1 234 5 view .LVU48
 224 0010 4FF47A70 		mov	r0, #1000
 225 0014 FFF7FEFF 		bl	osDelay
 226              	.LVL7:
 235:Core/Src/main.c ****       HAL_GPIO_WritePin(VD4_Pin_GPIO_Port, VD4_Pin_Pin, GPIO_PIN_SET);
 227              		.loc 1 235 5 view .LVU49
 235:Core/Src/main.c ****       HAL_GPIO_WritePin(VD4_Pin_GPIO_Port, VD4_Pin_Pin, GPIO_PIN_SET);
 228              		.loc 1 235 9 is_stmt 0 view .LVU50
 229 0018 064B     		ldr	r3, .L14+4
 230 001a 1B68     		ldr	r3, [r3]
 235:Core/Src/main.c ****       HAL_GPIO_WritePin(VD4_Pin_GPIO_Port, VD4_Pin_Pin, GPIO_PIN_SET);
 231              		.loc 1 235 8 view .LVU51
 232 001c 002B     		cmp	r3, #0
 233 001e F1D1     		bne	.L13
 237:Core/Src/main.c ****     } else {
 238:Core/Src/main.c ****       HAL_GPIO_WritePin(VD4_Pin_GPIO_Port, VD4_Pin_Pin, GPIO_PIN_RESET);
 234              		.loc 1 238 7 is_stmt 1 view .LVU52
 235 0020 0022     		movs	r2, #0
 236 0022 4FF40071 		mov	r1, #512
 237 0026 0248     		ldr	r0, .L14
 238 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 239              	.LVL8:
 240 002c F0E7     		b	.L9
 241              	.L15:
 242 002e 00BF     		.align	2
 243              	.L14:
 244 0030 00040240 		.word	1073873920
 245 0034 00000000 		.word	initPHYStatus
 246              		.cfi_endproc
 247              	.LFE106:
 249              		.section	.text.Error_Handler,"ax",%progbits
 250              		.align	1
 251              		.global	Error_Handler
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	Error_Handler:
 257              	.LFB107:
 239:Core/Src/main.c ****     }
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c ****   /* USER CODE END 5 */
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** void Error_Handler(void)
 249:Core/Src/main.c **** {
 258              		.loc 1 249 1 view -0
 259              		.cfi_startproc
 260              		@ Volatile: function does not return.
 261              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccG5Zjkn.s 			page 10


 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 250:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 251:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 252:Core/Src/main.c ****   __disable_irq();
 264              		.loc 1 252 3 view .LVU54
 265              	.LBB8:
 266              	.LBI8:
 267              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccG5Zjkn.s 			page 11


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccG5Zjkn.s 			page 12


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 268              		.loc 2 140 27 view .LVU55
 269              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 270              		.loc 2 142 3 view .LVU56
 271              		.syntax unified
 272              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 273 0000 72B6     		cpsid i
 274              	@ 0 "" 2
 275              		.thumb
 276              		.syntax unified
 277              	.L17:
 278              	.LBE9:
 279              	.LBE8:
 253:Core/Src/main.c ****   while (1)
 280              		.loc 1 253 3 discriminator 1 view .LVU57
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****   }
 281              		.loc 1 255 3 discriminator 1 view .LVU58
 253:Core/Src/main.c ****   while (1)
 282              		.loc 1 253 9 discriminator 1 view .LVU59
 283 0002 FEE7     		b	.L17
ARM GAS  /tmp/ccG5Zjkn.s 			page 13


 284              		.cfi_endproc
 285              	.LFE107:
 287              		.section	.text.SystemClock_Config,"ax",%progbits
 288              		.align	1
 289              		.global	SystemClock_Config
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	SystemClock_Config:
 295              	.LFB103:
 142:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 296              		.loc 1 142 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 72
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 00B5     		push	{lr}
 301              	.LCFI5:
 302              		.cfi_def_cfa_offset 4
 303              		.cfi_offset 14, -4
 304 0002 93B0     		sub	sp, sp, #76
 305              	.LCFI6:
 306              		.cfi_def_cfa_offset 80
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 307              		.loc 1 143 3 view .LVU61
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 308              		.loc 1 143 22 is_stmt 0 view .LVU62
 309 0004 3022     		movs	r2, #48
 310 0006 0021     		movs	r1, #0
 311 0008 06A8     		add	r0, sp, #24
 312 000a FFF7FEFF 		bl	memset
 313              	.LVL9:
 144:Core/Src/main.c **** 
 314              		.loc 1 144 3 is_stmt 1 view .LVU63
 144:Core/Src/main.c **** 
 315              		.loc 1 144 22 is_stmt 0 view .LVU64
 316 000e 0023     		movs	r3, #0
 317 0010 0193     		str	r3, [sp, #4]
 318 0012 0293     		str	r3, [sp, #8]
 319 0014 0393     		str	r3, [sp, #12]
 320 0016 0493     		str	r3, [sp, #16]
 321 0018 0593     		str	r3, [sp, #20]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 322              		.loc 1 149 3 is_stmt 1 view .LVU65
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 323              		.loc 1 149 36 is_stmt 0 view .LVU66
 324 001a 0123     		movs	r3, #1
 325 001c 0693     		str	r3, [sp, #24]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 326              		.loc 1 150 3 is_stmt 1 view .LVU67
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 327              		.loc 1 150 30 is_stmt 0 view .LVU68
 328 001e 0793     		str	r3, [sp, #28]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 329              		.loc 1 151 3 is_stmt 1 view .LVU69
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 330              		.loc 1 151 34 is_stmt 0 view .LVU70
 331 0020 0223     		movs	r3, #2
ARM GAS  /tmp/ccG5Zjkn.s 			page 14


 332 0022 0C93     		str	r3, [sp, #48]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 333              		.loc 1 152 3 is_stmt 1 view .LVU71
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 334              		.loc 1 152 35 is_stmt 0 view .LVU72
 335 0024 4FF48003 		mov	r3, #4194304
 336 0028 0D93     		str	r3, [sp, #52]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 337              		.loc 1 153 3 is_stmt 1 view .LVU73
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 338              		.loc 1 153 30 is_stmt 0 view .LVU74
 339 002a 1023     		movs	r3, #16
 340 002c 0E93     		str	r3, [sp, #56]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 341              		.loc 1 154 3 is_stmt 1 view .LVU75
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 342              		.loc 1 154 30 is_stmt 0 view .LVU76
 343 002e C023     		movs	r3, #192
 344 0030 0F93     		str	r3, [sp, #60]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 345              		.loc 1 155 3 is_stmt 1 view .LVU77
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 346              		.loc 1 155 30 is_stmt 0 view .LVU78
 347 0032 0423     		movs	r3, #4
 348 0034 1093     		str	r3, [sp, #64]
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 349              		.loc 1 156 3 is_stmt 1 view .LVU79
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 350              		.loc 1 156 30 is_stmt 0 view .LVU80
 351 0036 1193     		str	r3, [sp, #68]
 157:Core/Src/main.c ****   {
 352              		.loc 1 157 3 is_stmt 1 view .LVU81
 157:Core/Src/main.c ****   {
 353              		.loc 1 157 7 is_stmt 0 view .LVU82
 354 0038 06A8     		add	r0, sp, #24
 355 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 356              	.LVL10:
 157:Core/Src/main.c ****   {
 357              		.loc 1 157 6 view .LVU83
 358 003e 90B9     		cbnz	r0, .L22
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 359              		.loc 1 163 3 is_stmt 1 view .LVU84
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 360              		.loc 1 163 31 is_stmt 0 view .LVU85
 361 0040 0F23     		movs	r3, #15
 362 0042 0193     		str	r3, [sp, #4]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 363              		.loc 1 165 3 is_stmt 1 view .LVU86
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 364              		.loc 1 165 34 is_stmt 0 view .LVU87
 365 0044 0221     		movs	r1, #2
 366 0046 0291     		str	r1, [sp, #8]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 367              		.loc 1 166 3 is_stmt 1 view .LVU88
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 368              		.loc 1 166 35 is_stmt 0 view .LVU89
 369 0048 0023     		movs	r3, #0
ARM GAS  /tmp/ccG5Zjkn.s 			page 15


 370 004a 0393     		str	r3, [sp, #12]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 371              		.loc 1 167 3 is_stmt 1 view .LVU90
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 372              		.loc 1 167 36 is_stmt 0 view .LVU91
 373 004c 4FF4A053 		mov	r3, #5120
 374 0050 0493     		str	r3, [sp, #16]
 168:Core/Src/main.c **** 
 375              		.loc 1 168 3 is_stmt 1 view .LVU92
 168:Core/Src/main.c **** 
 376              		.loc 1 168 36 is_stmt 0 view .LVU93
 377 0052 4FF48053 		mov	r3, #4096
 378 0056 0593     		str	r3, [sp, #20]
 170:Core/Src/main.c ****   {
 379              		.loc 1 170 3 is_stmt 1 view .LVU94
 170:Core/Src/main.c ****   {
 380              		.loc 1 170 7 is_stmt 0 view .LVU95
 381 0058 01A8     		add	r0, sp, #4
 382 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 383              	.LVL11:
 170:Core/Src/main.c ****   {
 384              		.loc 1 170 6 view .LVU96
 385 005e 20B9     		cbnz	r0, .L23
 174:Core/Src/main.c **** 
 386              		.loc 1 174 1 view .LVU97
 387 0060 13B0     		add	sp, sp, #76
 388              	.LCFI7:
 389              		.cfi_remember_state
 390              		.cfi_def_cfa_offset 4
 391              		@ sp needed
 392 0062 5DF804FB 		ldr	pc, [sp], #4
 393              	.L22:
 394              	.LCFI8:
 395              		.cfi_restore_state
 159:Core/Src/main.c ****   }
 396              		.loc 1 159 5 is_stmt 1 view .LVU98
 397 0066 FFF7FEFF 		bl	Error_Handler
 398              	.LVL12:
 399              	.L23:
 172:Core/Src/main.c ****   }
 400              		.loc 1 172 5 view .LVU99
 401 006a FFF7FEFF 		bl	Error_Handler
 402              	.LVL13:
 403              		.cfi_endproc
 404              	.LFE103:
 406              		.section	.text.main,"ax",%progbits
 407              		.align	1
 408              		.global	main
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	main:
 414              	.LFB102:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 415              		.loc 1 69 1 view -0
 416              		.cfi_startproc
 417              		@ Volatile: function does not return.
ARM GAS  /tmp/ccG5Zjkn.s 			page 16


 418              		@ args = 0, pretend = 0, frame = 56
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 00B5     		push	{lr}
 421              	.LCFI9:
 422              		.cfi_def_cfa_offset 4
 423              		.cfi_offset 14, -4
 424 0002 8FB0     		sub	sp, sp, #60
 425              	.LCFI10:
 426              		.cfi_def_cfa_offset 64
  77:Core/Src/main.c **** 
 427              		.loc 1 77 3 view .LVU101
 428 0004 FFF7FEFF 		bl	HAL_Init
 429              	.LVL14:
  84:Core/Src/main.c **** 
 430              		.loc 1 84 3 view .LVU102
 431 0008 FFF7FEFF 		bl	SystemClock_Config
 432              	.LVL15:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 433              		.loc 1 91 3 view .LVU103
 434 000c FFF7FEFF 		bl	MX_GPIO_Init
 435              	.LVL16:
 114:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 436              		.loc 1 114 3 view .LVU104
 437 0010 124C     		ldr	r4, .L27
 438 0012 0DF11C0C 		add	ip, sp, #28
 439 0016 A646     		mov	lr, r4
 440 0018 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 441 001c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 442 0020 9EE80700 		ldm	lr, {r0, r1, r2}
 443 0024 8CE80700 		stm	ip, {r0, r1, r2}
 115:Core/Src/main.c **** 
 444              		.loc 1 115 3 view .LVU105
 115:Core/Src/main.c **** 
 445              		.loc 1 115 23 is_stmt 0 view .LVU106
 446 0028 0021     		movs	r1, #0
 447 002a 07A8     		add	r0, sp, #28
 448 002c FFF7FEFF 		bl	osThreadCreate
 449              	.LVL17:
 115:Core/Src/main.c **** 
 450              		.loc 1 115 21 view .LVU107
 451 0030 0B4B     		ldr	r3, .L27+4
 452 0032 1860     		str	r0, [r3]
 118:Core/Src/main.c ****   lwipTaskHandle = osThreadCreate(osThread(lwipTask), NULL);
 453              		.loc 1 118 3 is_stmt 1 view .LVU108
 454 0034 EE46     		mov	lr, sp
 455 0036 04F11C0C 		add	ip, r4, #28
 456 003a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 457 003e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 458 0042 9CE80700 		ldm	ip, {r0, r1, r2}
 459 0046 8EE80700 		stm	lr, {r0, r1, r2}
 119:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 460              		.loc 1 119 3 view .LVU109
 119:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 461              		.loc 1 119 20 is_stmt 0 view .LVU110
 462 004a 0021     		movs	r1, #0
 463 004c 6846     		mov	r0, sp
 464 004e FFF7FEFF 		bl	osThreadCreate
ARM GAS  /tmp/ccG5Zjkn.s 			page 17


 465              	.LVL18:
 119:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 466              		.loc 1 119 18 view .LVU111
 467 0052 044B     		ldr	r3, .L27+8
 468 0054 1860     		str	r0, [r3]
 123:Core/Src/main.c **** 
 469              		.loc 1 123 3 is_stmt 1 view .LVU112
 470 0056 FFF7FEFF 		bl	osKernelStart
 471              	.LVL19:
 472              	.L25:
 128:Core/Src/main.c ****   {
 473              		.loc 1 128 3 discriminator 1 view .LVU113
 133:Core/Src/main.c ****   /* USER CODE END 3 */
 474              		.loc 1 133 3 discriminator 1 view .LVU114
 128:Core/Src/main.c ****   {
 475              		.loc 1 128 9 discriminator 1 view .LVU115
 476 005a FEE7     		b	.L25
 477              	.L28:
 478              		.align	2
 479              	.L27:
 480 005c 00000000 		.word	.LANCHOR0
 481 0060 00000000 		.word	.LANCHOR1
 482 0064 00000000 		.word	.LANCHOR2
 483              		.cfi_endproc
 484              	.LFE102:
 486              		.global	lwipTaskHandle
 487              		.global	defaultTaskHandle
 488              		.section	.rodata
 489              		.align	2
 490              		.set	.LANCHOR0,. + 0
 491              	.LC4:
 492 0000 00000000 		.word	.LC0
 493 0004 00000000 		.word	StartDefaultTask
 494 0008 0000     		.short	0
 495 000a 0000     		.space	2
 496 000c 00000000 		.word	0
 497 0010 80000000 		.word	128
 498 0014 00000000 		.word	0
 499 0018 00000000 		.word	0
 500              	.LC5:
 501 001c 0C000000 		.word	.LC2
 502 0020 00000000 		.word	StartLWIPTask
 503 0024 0000     		.short	0
 504 0026 0000     		.space	2
 505 0028 00000000 		.word	0
 506 002c 00020000 		.word	512
 507 0030 00000000 		.word	0
 508 0034 00000000 		.word	0
 509              		.section	.bss.defaultTaskHandle,"aw",%nobits
 510              		.align	2
 511              		.set	.LANCHOR1,. + 0
 514              	defaultTaskHandle:
 515 0000 00000000 		.space	4
 516              		.section	.bss.lwipTaskHandle,"aw",%nobits
 517              		.align	2
 518              		.set	.LANCHOR2,. + 0
 521              	lwipTaskHandle:
ARM GAS  /tmp/ccG5Zjkn.s 			page 18


 522 0000 00000000 		.space	4
 523              		.text
 524              	.Letext0:
 525              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 526              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 527              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f207xx.h"
 528              		.file 6 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_rcc.h"
 529              		.file 7 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_gpio.h"
 530              		.file 8 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 531              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 532              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 533              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 534              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 535              		.file 13 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 536              		.file 14 "LWIP/App/lwip.h"
 537              		.file 15 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
 538              		.file 16 "<built-in>"
ARM GAS  /tmp/ccG5Zjkn.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccG5Zjkn.s:15     .rodata.str1.4:0000000000000000 $d
     /tmp/ccG5Zjkn.s:25     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccG5Zjkn.s:30     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccG5Zjkn.s:154    .text.MX_GPIO_Init:000000000000008c $d
     /tmp/ccG5Zjkn.s:160    .text.StartLWIPTask:0000000000000000 $t
     /tmp/ccG5Zjkn.s:166    .text.StartLWIPTask:0000000000000000 StartLWIPTask
     /tmp/ccG5Zjkn.s:192    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccG5Zjkn.s:198    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccG5Zjkn.s:244    .text.StartDefaultTask:0000000000000030 $d
     /tmp/ccG5Zjkn.s:250    .text.Error_Handler:0000000000000000 $t
     /tmp/ccG5Zjkn.s:256    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccG5Zjkn.s:288    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccG5Zjkn.s:294    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccG5Zjkn.s:407    .text.main:0000000000000000 $t
     /tmp/ccG5Zjkn.s:413    .text.main:0000000000000000 main
     /tmp/ccG5Zjkn.s:480    .text.main:000000000000005c $d
     /tmp/ccG5Zjkn.s:521    .bss.lwipTaskHandle:0000000000000000 lwipTaskHandle
     /tmp/ccG5Zjkn.s:514    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccG5Zjkn.s:489    .rodata:0000000000000000 $d
     /tmp/ccG5Zjkn.s:510    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccG5Zjkn.s:517    .bss.lwipTaskHandle:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
MX_LWIP_Init
osDelay
initPHYStatus
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
